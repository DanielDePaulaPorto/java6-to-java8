:java-package: src/org/j6toj8/streams
:section-java-package: ../../../{java-package}

=== Streams Paralelos

.Objetivo
--------------------------------------------------
Develop code that uses parallel streams, including decomposition operation and reduction operation in streams
-
Desenvolver código que usa Streams Paralelos, incluindo operação de decomposição e operação de redução em Streams
--------------------------------------------------

Streams podem ser sequenciais ou paralelos. Os sequencias foram vistos na seção anterior, enquanto os paralelos serão apresentados nesta seção. Streams paralelos são executados por mais de uma Thread, geralmente uma quantidade igual à quantidade de núcleos do processador onde a aplicação está sendo executada. Apesar disso, nem sempre é útil utilizá-los. Seu ganho real é em Streams com grande volumes de dados. Em um Stream pequeno, transformá-lo em paralelo pode até causar uma perda de performance.

Ao utilizar qualquer tipo de Stream, é recomendável não executar funções lambdas que causem efeitos colaterais, como mudanças no estado de objetos. Em Streams paralelos essa recomendação é ainda mais forte.

. Chamando .parallel em Streams
. Chamando .parallelStream em Coleções
. Exemplo de .forEach com e sem paralelo, imprimindo em diferentes
. Exemplo de .forEachOrdered em streams paralelos, que mantém ordem
. Exemplo de ganho de performance
. Evitar expressões lambda que alteram o estado de um objeto. Exemplo de forEachOrdered e um map com operação stateful.
. Exemplo de findAny com resultados imprevisíveis
. Utilização de unordered para ganhar performance em findFirst, limit, skip
. Reduce com acumuladores associativos (multiplicação)
. Reduce com acumuladores não-associativos (subtração)
. Exemplo com toConcurrentMap
. Exemplo com groupByConcurrent

.Referências
****

* Working with Parallel Streams
+
Boyarsky, Jeanne; Selikoff, Scott. OCP: Oracle Certified Professional Java SE 8 Programmer II Study Guide (p. 366). Wiley. Edição do Kindle. 

* https://www.baeldung.com/java-8-streams[The Java 8 Stream API Tutorial.]

* https://docs.oracle.com/javase/tutorial/collections/streams/parallelism.html[Parallelism.] The Java™ Tutorials.

* https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html[Package java.util.stream.] Java Plataform SE 8.

* https://docs.oracle.com/javase/8/docs/api/?java/util/stream/Stream.html[Interface Stream<T>.] Java Plataform SE 8.

****